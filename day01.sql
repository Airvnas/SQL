--단문주석
/*복문주석
   여러줄 주석*/
--SQL(Structed Query Language
--학사관리 프로그램
--학생 Entity==>Table(Relation)
--
--CREATE TABLE 테이블명(
--컬럼명1 자료형(크기) 제약조건,
--컬럼명2 자료형(크기) ....,
--);

CREATE TABLE STUDENT(
    NO NUMBER(4) PRIMARY KEY,--UNIQUE, NOT NULL
    NAME VARCHAR2(30) NOT NULL,
    TEL VARCHAR2(15) NOT NULL,
    ADDR VARCHAR2(100),
    INDATE DATE DEFAULT SYSDATE,
    SCLASS VARCHAR2(50),
    SROOM NUMBER(3)
);

DESC STUDENT;

SELECT *FROM STUDENT;

--INSERT INTO 테이블명(컬럼명1,컬럼명2,...)
--VALUES(값1,값2,...);
--COMMIT;
INSERT INTO STUDENT(NO,NAME,TEL,ADDR,SCLASS,SROOM)
VALUES(1,'홍길동','010-1111','서울 마포구','자바반',101);

SELECT NO,NAME,TEL,SCLASS FROM STUDENT;
SELECT * FROM STUDENT;

INSERT INTO STUDENT(NO,NAME,TEL,ADDR)
VALUES(2,'김철수','010-2222','서울 강남구');

COMMIT;

INSERT INTO STUDENT
VALUES(3,'이영희','010-3333','서울 강동구',SYSDATE,'빅데이터반',201);

ROLLBACK;
SELECT *FROM STUDENT;
--자바반 2명 
INSERT INTO STUDENT
VALUES(4,'이철희','010-4444','인천 남동구',SYSDATE,'자바반',101);
INSERT INTO STUDENT
VALUES(5,'최윤희','010-5444','수원 남동구',SYSDATE,'자바반',101);

--빅데이터반 2명
INSERT INTO STUDENT (NO,NAME,TEL)
VALUES(6,'이무영','010-4545');
SELECT *FROM STUDENT;
INSERT INTO STUDENT (NO,NAME,TEL,SCLASS,SROOM)
VALUES(7,'이영실','010-4545','빅데이터',301);
SELECT * FROM STUDENT
WHERE SCLASS='자바반';

SELECT * FROM STUDENT
WHERE SCLASS='빅데이터반';


SELECT * FROM STUDENT ORDER BY SCLASS ASC;
--테이블 삭제 DROP TABLE 테이블명;
DROP TABLE STUDENT;

CREATE TABLE SCLASS(
    SNO NUMBER(4) PRIMARY KEY,
    SNAME VARCHAR2(30) NOT NULL,
    SROOM NUMBER(3)
);

DESC SCLASS;

-- 학급정보를 3개 INSERT하기
--10 백엔드개발자반 101
--20 빅데이터반   201
--30 융복합반   301

INSERT INTO SCLASS
VALUES(10,'백엔드개발자반',101);

INSERT INTO SCLASS
VALUES(20,'빅데이터반',201);

INSERT INTO SCLASS
VALUES(30,'융복합반',301);

COMMIT;
SELECT * FROM SCLASS;

--UPDATE 테이블명 SET 컬럼명=값
--WHERE 조건절

--UPDATE SCLASS SET SNAME='백엔드개발자반'
--WHERE SNO=10;

CREATE TABLE STUDENT(
    NO NUMBER(4) PRIMARY KEY,
    NAME VARCHAR2(30) NOT NULL,
    TEL VARCHAR2(15) NOT NULL,
    ADDR VARCHAR2(100),
    INDATE DATE DEFAULT SYSDATE,
    SNO_FK NUMBER(4) REFERENCES SCLASS(SNO)--외래키 설정
);

DESC STUDENT;

--일련번호를 생성해주는 객체: SEQUENCE

--CREATE SEQUENCE 시퀀스명
--START WITH 시작값
--INCREMENT BY 증가치
--NOCACHE

CREATE SEQUENCE STUDENT_SEQ
START WITH 1
INCREMENT BY 1
NOCACHE;

INSERT INTO STUDENT (NO,NAME,TEL,ADDR,SNO_FK)
VALUES(STUDENT_SEQ.NEXTVAL,'홍길동','1111','서울 강남구 삼성동',10);

INSERT INTO STUDENT
VALUES(STUDENT_SEQ.NEXTVAL,'김철수','2222','서울 마포구 서교동',SYSDATE,20);

INSERT INTO STUDENT
VALUES(STUDENT_SEQ.NEXTVAL,'김희진','3333','경기 양주',SYSDATE,10);

INSERT INTO STUDENT
VALUES(STUDENT_SEQ.NEXTVAL,'김희윤','4444','경기 의정부',SYSDATE,10);

INSERT INTO STUDENT
VALUES(STUDENT_SEQ.NEXTVAL,'김주영','5555','경기 의정부',SYSDATE,20);
INSERT INTO STUDENT
VALUES(STUDENT_SEQ.NEXTVAL,'김주성','6666','서울 도봉구',SYSDATE,20);
INSERT INTO STUDENT
VALUES(STUDENT_SEQ.NEXTVAL,'최웅','7777','서울 성동구',SYSDATE,30);
COMMIT;
DELETE FROM STUDENT WHERE NO=5;

SELECT * FROM STUDENT ORDER BY SNO_FK ASC;

--테이블 2개를 하나로 합쳐서 보여주자
--JOIN문
--SELECT 테이블1.컬럼명,...,테이블2.컬럼명...
--FROM 테이블명1 JOIN 테이블명2
--ON 테이블1.PK = 테이블2.FK

SELECT STUDENT.NO,NAME,TEL,INDATE,SNAME,SROOM
FROM SCLASS JOIN STUDENT
ON SCLASS.SNO= STUDENT.SNO_FK ORDER BY SNAME ASC;

UPDATE SCLASS SET SROOM=401 
WHERE SNO= 20;

COMMIT;

--학급별 인원수 알아보기
SELECT COUNT(*) FROM STUDENT;
SELECT SNO_FK, COUNT(*) FROM STUDENT
GROUP BY SNO_FK ORDER BY SNO_FK ASC;

SELECT * FROM emp;
--사원테이블에서 사번, 사원명, 급여, 500을 인상시킨 급여를 가져와 보여줌
SELECT EMPNO,ENAME,SAL,SAL+500 AS SAL_UP FROM EMP;--AS->별칭

SELECT EMPNO,ENAME,SAL,COMM,JOB FROM EMP;

SELECT EMPNO,ENAME,SAL,COMM,JOB,SAL*12+COMM "연봉" FROM EMP;

--NVL(컬럼명,값)
--컬럼의 값이 NULL인 경우 값1로 치환하는 함수
SELECT EMPNO,ENAME,SAL,COMM,JOB,SAL*12+NVL(COMM,0) "연  봉" FROM EMP;

--NVL2(컬럼명,값1,값2)
--컬럼값이 NULL이 아닐경우 값 1을 반환하고, NULL이면 값2를 반환하는 함수

SELECT EMPNO,ENAME,MGR,JOB FROM EMP;

사원 테이블에서 관리자 MGR이 있는 경우1, 없으면 0을 출력

SELECT EMPNO,ENAME,MGR,JOB,NVL2(MGR,1,0) "상관" FROM EMP;







